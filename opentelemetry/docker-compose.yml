services:
  api:
    build: .
    container_name: api
    volumes:
      - ./logs/:/logs/
    ports:
      - 3030:3030
    networks:
      - opentelemetry

  jaeger:
    image: jaegertracing/all-in-one:1.21.0
    container_name: jaeger
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    restart: unless-stopped
    networks:
      - opentelemetry

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - opentelemetry

  prometheus:
    image: prom/prometheus
    volumes:
      - "./resources/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    networks:
      - opentelemetry

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: elasticsearch
    volumes:
      - ./resources/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - "9200:9200"
    networks:
      - opentelemetry

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.2
    container_name: logstash
    ports:
      - "5044:5044"
    volumes:
      - ./resources/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    networks:
      - opentelemetry
    depends_on:
      elasticsearch:
        condition: service_healthy

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.6.0
    command: filebeat -e -strict.perms=false
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - opentelemetry
    volumes:
      - ./resources/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs/:/logs/

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - opentelemetry
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/api/status"]
      interval: 3s
      timeout: 3s
      retries: 50

networks:
  opentelemetry:
    driver: bridge

volumes:
  elasticsearch-data:
  grafana-storage:
